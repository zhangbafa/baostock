name: Build Multi-Platform Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build Windows Executable
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install baostock pandas click rich pyinstaller
        
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --name stock_cli_multi.exe stock_cli_multi.py
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: stock_cli_multi_windows
        path: dist/stock_cli_multi.exe

  build-macos:
    runs-on: macos-latest
    name: Build macOS Executable
    strategy:
      matrix:
        architecture: [x64, arm64]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: ${{ matrix.architecture }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install baostock pandas click rich pyinstaller
        
    - name: Build macOS executable
      run: |
        python -c "import platform; print(f'Building for: {platform.machine()}')"
        pyinstaller --onefile --name stock_cli_multi_${{ matrix.architecture }} stock_cli_multi.py
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: stock_cli_multi_macos_${{ matrix.architecture }}
        path: dist/stock_cli_multi_${{ matrix.architecture }}